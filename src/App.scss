@import "~ed-grid/ed-grid";

@import "antd/dist/antd";

$primary: #7A8A65;
$info: #3f96c1;
$warning: #fbcf1e;
$error: #d61a24;

$bg-dark: #18191B;
$card-dark: #242224;
$divider: #313131;
$light: #f8f8f8;
$muted: #696969;
$text-D: #8F8F8F;
$text-L: #3A3A3A;
$white: #ffffff;

*, ::after, ::before{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.bg-card-dark{
    color: red;
}

body {
    background-color: $bg-dark;
    color: $text-D;
    font-family: Roboto,sans-serif;
    font-size: .8rem;
    font-weight: 400;
    height: 100%;
    line-height:1.5;
    overflow-x: hidden;
    overflow-y: auto;
}

h1 {
    font-size: 1.75rem;
    padding-bottom: 10px;
    color: $text-D;
}

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
    margin-bottom: .5rem;
    font-weight: 500;
    line-height: 1.2;
    color: $text-D !important;
}

.main {
    left: 5%;
    right: 5%;
    text-align: center;
    margin: 0 auto;
}

.bxs {
    box-shadow: 0 3px 30px rgba(0,0,0,.3),0 3px 24px rgba(0,0,0,.3);
}

.ml-5 {
    margin-left: 5%;
}

.ml-10 {
    margin-left: 10%;
    @media only screen and (max-width: 767px) {
        margin-left: 15%;
    }
}
.mt-5 {
    margin-top: 5%;
}

.mt-10 {
    margin-top: 10%;
    // max-width: 991px
}

.bxs {
    box-shadow: 0 3px 30px rgba(0,0,0,.3),0 3px 24px rgba(0,0,0,.3);
}

.text-ups {
    text-transform: inherit;
}

.text-title {
    color: $primary;
    font-size: 1.2em;
}

input:focus, input.form-control:focus {
    border: 1px solid $primary;
    outline: none;
}

.Toastify__toast--success {
    background: $primary !important;
    svg {
        fill: $white;
        width: 20px;
        height: 20px;
    }
}

.Toastify__toast--info {
    background: $info !important;
    svg {
        fill: $white;
        width: 20px;
        height: 20px;
    }
}

.Toastify__toast--warn {
    background:$warning !important;
    svg {
        fill: $white;
        width: 20px;
        height: 20px;
    }
}

.Toastify__toast--error {
    background: $error !important;
    svg {
        fill: $white;
        width: 20px;
        height: 20px;
    }
}

.ant-message svg {
    position: relative;
    top: 1px;
    margin-right: 8px;
    width: 16px;
    height: 16px;
 }

.switch-wrapper {
    position: relative;
  }
   
  .switch-wrapper > div {
    position: relative;
  }

form {
    padding: 30px;
    @media only screen and (max-width: 767px) {
        padding: 10px;
    }
    label {
        color: hsla(0,0%,56.1%,.7);
        font-size: 12px;
    }
    input {
        background-color: transparent;
        border: 1px solid #424242;
        border-radius: .4rem;
        color: $text-D;
        font-size: 13px;
        height: 40px;
        margin-bottom: 20px;
        padding: 10px;
        width: 100%;
    }
}

.ant-tooltip-inner {
    background-color: rgba(122, 138, 101, 0.75) !important;
}

.ant-tooltip-arrow-content {
    background-color: rgba(122, 138, 101, 0.75) !important;
}
  


//MEDIA QUERY MANAGER
// 0 - 600: Phone 
// 600 - 900: Tablet portrait
// 900 - 1200: Tablet landscape
// 1200 - 1800: Normal styles
// 1800+ : Big Desktop
// 1em = 16px
// The smaller device rules always should write below the bigger device rules

@mixin respond($breakpoint) {
    @if($breakpoint=="phone") {
        @media only screen and (max-width: 575px) {
            @content;
        }
    }
    @if($breakpoint=="phone-land") {
        @media only screen and (max-width: 767px) {
            @content;
        }
    }
    @if($breakpoint=="tab-port") {
        @media only screen and (max-width: 991px) {
            @content;
        }
    }
    @if($breakpoint=="tab-land") {
        @media only screen and (max-width: 1199px) {
            @content;
        }
    }
    @if ($breakpoint=="desktop") {
        @media only screen and (min-width: 1200px) {
            @content;
        }
    }
    @if($breakpoint=="big-desktop") {
        @media only screen and (min-width: 1800px) {
            @content;
        }
    }
}

//don't use it untill you need this too much
@mixin custommq($min: null, $max: null) {
    @if ($min !=null and $max !=null) {
        @media only screen and (min-width: $min) and (max-width: $max) {
            @content;
        }
    }
    @if ($min==null and $max !=null) {
        @media only screen and (max-width: $max) {
            @content;
        }
    }
    @if ($min !=null and $max==null) {
        @media only screen and (min-width: $min) {
            @content;
        }
    }
}